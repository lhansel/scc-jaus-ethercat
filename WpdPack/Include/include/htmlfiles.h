/* Rev:$Revision: 1.15 $ */  

/******************************************************************************
 *   Copyright 1998-2006 NetBurner   ALL RIGHTS RESERVED
 *
 *   Permission is hereby granted to purchasers of NetBurner hardware to use or
 *   modify this computer program for any use as long as the resultant program
 *   is only executed on NetBurner provided hardware.
 *
 *   No other rights to use this program or its derivatives in part or in whole
 *   are granted.
 *
 *   It may be possible to license this or other NetBurner software for use on
 *   non-NetBurner hardware. Please contact licensing@netburner.com for more
 *   infomation.
 *
 *   NetBurner makes no representation or warranties with respect to the
 *   performance of this computer program, and specifically disclaims any
 *   responsibility for any damages, special or consequential, connected with
 *   the use of this program.
 *
 * ----------------------------------------------------------------------------
 *
 *   NetBurner, Inc.
 *   5405 Morehouse Drive, Suite 200
 *   San Diego, CA  92121
 *
 *   Information available at:  http://www.netburner.com
 *   E-mail:                    info@netburner.com
 *
 *   Support is available:      support@netburner.com
 ******************************************************************************/

/******************************************************************************
 *   These functions are satisfied by the code generated by the utility
 *   "comphtml.exe".
 ******************************************************************************/

#include "basictypes.h"
#include "nettypes.h"


enum comp_type { eNoCompression,
                 eHuffman,
                 eHuffmanHtml,
                 eUncompHtml };

enum file_type { eTypeText,
                 eTypeHtml,
                 eTypeJpg,
                 eTypeGIF,
                 eTypeClass,
                 eTypePNG,
                 eTypeJar,
                 eTypeOther,
                 eTypeMPEG,
				 eTypeCSS,
                 eTypeXML,
                 eTypeWBMP,
                 eTypeJS };

//
// One of these records exists for each file encoded.
//
struct HTML_FILE_RECORD
{
   const char *fname;
   const unsigned char *file_pointer;
   unsigned long siz;
   comp_type cType;
   file_type fType;
};


extern const unsigned n_file_record;
extern const unsigned short huffman_table[];
extern const HTML_FILE_RECORD file_record[];
extern const char *html_table[];


int SendFullResponse( char *name, int fd );
int SendHeaderResponse( char *name, int fd ); 
int SendFileFragment( char *name, int fd , PCSTR url=NULL);
HTML_FILE_RECORD *GetRecordFromName( char *name );



void WriteHtmlVariable(int fd, char c);
void WriteHtmlVariable(int fd, int i);
void WriteHtmlVariable(int fd, short i);
void WriteHtmlVariable(int fd, long i);
void WriteHtmlVariable(int fd, BYTE b);
void WriteHtmlVariable(int fd, WORD w);
void WriteHtmlVariable(int fd, unsigned long dw);
void WriteHtmlVariable(int fd, const char *);

void WriteHtmlVariable(int fd, MACADR ip);

class IPADDR_CLASS						   	
{
public:
IPADDR the_addr;
IPADDR_CLASS(IPADDR ip) {the_addr=ip; }
};

IPADDR_CLASS IPCAST(IPADDR ip);

void WriteHtmlVariable(int fd,IPADDR_CLASS ipa);


